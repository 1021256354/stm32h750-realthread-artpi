#ifndef RT_CONFIG_H__
#define RT_CONFIG_H__

/* Generated by Kconfiglib (https://github.com/ulfalizer/Kconfiglib) */

/* RT-Thread Kernel */

#define RT_NAME_MAX 8
#define RT_ALIGN_SIZE 4
#define RT_THREAD_PRIORITY_32
#define RT_THREAD_PRIORITY_MAX 32
#define RT_TICK_PER_SECOND 1000
#define RT_USING_OVERFLOW_CHECK
#define RT_USING_HOOK
#define RT_USING_IDLE_HOOK
#define RT_IDLE_HOOK_LIST_SIZE 4
#define IDLE_THREAD_STACK_SIZE 256
#define RT_USING_TIMER_SOFT
#define RT_TIMER_THREAD_PRIO 4
#define RT_TIMER_THREAD_STACK_SIZE 512
#define RT_DEBUG

/* Inter-Thread communication */

#define RT_USING_SEMAPHORE
#define RT_USING_MUTEX
#define RT_USING_EVENT
#define RT_USING_MAILBOX
#define RT_USING_MESSAGEQUEUE
/* end of Inter-Thread communication */

/* Memory Management */

#define RT_USING_MEMPOOL
#define RT_USING_MEMHEAP
#define RT_USING_MEMHEAP_AS_HEAP
#define RT_USING_HEAP
/* end of Memory Management */

/* Kernel Device Object */

#define RT_USING_DEVICE
#define RT_USING_CONSOLE
#define RT_CONSOLEBUF_SIZE 128
#define RT_CONSOLE_DEVICE_NAME "uart4"
/* end of Kernel Device Object */
#define RT_VER_NUM 0x40003
/* end of RT-Thread Kernel */
#define ARCH_ARM
#define RT_USING_CPU_FFS
#define ARCH_ARM_CORTEX_M
#define ARCH_ARM_CORTEX_M7

/* RT-Thread Components */

#define RT_USING_COMPONENTS_INIT
#define RT_USING_USER_MAIN
#define RT_MAIN_THREAD_STACK_SIZE 2048
#define RT_MAIN_THREAD_PRIORITY 10

/* C++ features */

/* end of C++ features */

/* Command shell */

#define RT_USING_FINSH
#define FINSH_THREAD_NAME "tshell"
#define FINSH_USING_HISTORY
#define FINSH_HISTORY_LINES 5
#define FINSH_USING_SYMTAB
#define FINSH_USING_DESCRIPTION
#define FINSH_THREAD_PRIORITY 20
#define FINSH_THREAD_STACK_SIZE 4096
#define FINSH_CMD_SIZE 80
#define FINSH_USING_MSH
#define FINSH_USING_MSH_DEFAULT
#define FINSH_ARG_MAX 10
/* end of Command shell */

/* Device virtual file system */

#define RT_USING_DFS
#define DFS_USING_WORKDIR
#define DFS_FILESYSTEMS_MAX 6
#define DFS_FILESYSTEM_TYPES_MAX 6
#define DFS_FD_MAX 32
#define RT_USING_DFS_DEVFS
/* end of Device virtual file system */

/* Device Drivers */

#define RT_USING_DEVICE_IPC
#define RT_PIPE_BUFSZ 512
#define RT_USING_SERIAL
#define RT_SERIAL_RB_BUFSZ 64
#define RT_USING_PIN
#define RT_USING_SPI

/* Using USB */

/* end of Using USB */
/* end of Device Drivers */

/* POSIX layer and C standard library */

#define RT_USING_LIBC
#define RT_USING_POSIX
/* end of POSIX layer and C standard library */

/* Network */

/* Socket abstraction layer */

/* end of Socket abstraction layer */

/* Network interface device */

/* end of Network interface device */

/* light weight TCP/IP stack */

/* end of light weight TCP/IP stack */

/* AT commands */

/* end of AT commands */
/* end of Network */

/* VBUS(Virtual Software BUS) */

/* end of VBUS(Virtual Software BUS) */

/* Utilities */

#define RT_USING_ULOG
#define ULOG_OUTPUT_LVL_D
#define ULOG_OUTPUT_LVL 7
#define ULOG_ASSERT_ENABLE
#define ULOG_LINE_BUF_SIZE 384

/* log format */

#define ULOG_USING_COLOR
#define ULOG_OUTPUT_TIME
#define ULOG_OUTPUT_LEVEL
#define ULOG_OUTPUT_TAG
/* end of log format */
#define ULOG_BACKEND_USING_CONSOLE
/* end of Utilities */
/* end of RT-Thread Components */

/* RT-Thread online packages */

/* IoT - internet of things */


/* Wi-Fi */

/* Marvell WiFi */

/* end of Marvell WiFi */

/* Wiced WiFi */

/* end of Wiced WiFi */
/* end of Wi-Fi */

/* IoT Cloud */

/* end of IoT Cloud */
/* end of IoT - internet of things */

/* security packages */

/* end of security packages */

/* language packages */

/* end of language packages */

/* multimedia packages */

/* end of multimedia packages */

/* tools packages */

/* end of tools packages */

/* system packages */

/* end of system packages */

/* peripheral libraries and drivers */

#define PKG_USING_LORA_RADIO_DRIVER
#define LORA_RADIO_DRIVER_USING_LORA_CHIP
#define LORA_RADIO_DRIVER_USING_LORA_RADIO_SINGLE_INSTANCE
#define LORA_RADIO0_DEVICE_NAME "lora-radio0"
#define LORA_RADIO0_SPI_BUS_NAME "spi4"
#define LORA_RADIO_DRIVER_USING_LORA_CHIP_SX126X

/* Select Supported LoRa Module [SX126X] */

#define LORA_RADIO_DRIVER_USING_LORA_MODULE_LSD4RF_2R717N40

/* LoRa Chip SX1268 (SPI module) */

#define LORA_RADIO_USE_TCXO
#define LORA_RADIO_GPIO_SETUP

/* Select Supported Target Borad */

#define LORA_RADIO_SPI_SETUP
#define LORA_RADIO_GPIO_SETUP_BY_PIN_NUMBER
#define LORA_RADIO_NSS_PIN 68
#define LORA_RADIO_RESET_PIN 114
#define LORA_RADIO_DIO1_PIN 16
#define LORA_RADIO_DIO2_PIN 115
#define LORA_RADIO_RFSW1_PIN 17
#define LORA_RADIO_RFSW2_PIN 18
#define LORA_RADIO_BUSY_PIN 6
#define LORA_RADIO_DRIVER_USING_TRAGET_BOARD_ART_PI_AND_LRS007_RF_B
/* end of Select Supported Target Borad */
/* end of Select Supported LoRa Module [SX126X] */
#define LORA_RADIO_DRIVER_USING_LORA_RADIO_DEBUG
#define LR_DBG_APP_CONFIG
#define LR_DBG_APP 1
#define LR_DBG_INTERFACE_CONFIG
#define LR_DBG_INTERFACE 1
#define LR_DBG_CHIP_CONFIG
#define LR_DBG_CHIP 1
#define LR_DBG_SPI_CONFIG
#define LR_DBG_SPI 1

/* Select LoRa Radio Driver Example */

#define LORA_RADIO_DRIVER_USING_LORA_RADIO_TEST_SHELL
#define PHY_REGION_CN470
#define USE_MODEM_LORA
/* end of Select LoRa Radio Driver Example */
#define PKG_USING_LORA_RADIO_DRIVER_V130
/* end of peripheral libraries and drivers */

/* miscellaneous packages */


/* samples: kernel and components samples */

/* end of samples: kernel and components samples */
/* end of miscellaneous packages */
/* end of RT-Thread online packages */

/* Hardware Drivers Config */

#define SOC_STM32H750XB
#define SOC_SERIES_STM32H7

/* Board extended module */

/* end of Board extended module */

/* Onboard Peripheral */

#define BSP_USING_USB_TO_USART
/* end of Onboard Peripheral */

/* On-chip Peripheral */

#define BSP_USING_GPIO
#define BSP_USING_UART
#define BSP_USING_UART4
#define BSP_USING_SPI
#define BSP_USING_SPI4
/* end of On-chip Peripheral */
/* end of Hardware Drivers Config */

/* External Libraries */

/* end of External Libraries */
#define RT_STUDIO_BUILT_IN

#endif
